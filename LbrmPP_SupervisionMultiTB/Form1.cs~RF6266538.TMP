using System;
using System.Threading;
using System.Net.Sockets;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace LbrmPP_SupervisionMultiTB
{
    public partial class Form1 : Form
    {
        private BackgroundWorker bgWorkerCB;
        private BackgroundWorker bgWorkerTCP_PUP;
        private BackgroundWorker bgWorkerTCP_VE1;
        private BackgroundWorker bgWorkerTCP_VIU;
        private BackgroundWorker bgWorkerTCP_VC1;
        private BackgroundWorker bgWorkerTCP_VC2;
        private BackgroundWorker bgWorkerTCP_VI2;
        private BackgroundWorker bgWorkerTCP_VE2;
        
        public Form1()
        {
            InitializeComponent();

            bgWorkerCB = new BackgroundWorker();
            bgWorkerCB.WorkerReportsProgress = true;
            bgWorkerCB.DoWork += bgWorkerCB_Process;
            bgWorkerCB.ProgressChanged += bgWorkerCB_ProgressChanged;
            bgWorkerCB.RunWorkerCompleted += bgWorkerCB_RunWorkerCompleted;

            bgWorkerTCP_PUP = new BackgroundWorker();
            bgWorkerTCP_PUP.WorkerReportsProgress = true;
            bgWorkerTCP_PUP.DoWork += bgWorkerTCP_PUP_Process;
            bgWorkerTCP_PUP.ProgressChanged += bgWorkerTCP_PUP_ProgressChanged;
            bgWorkerTCP_PUP.RunWorkerCompleted += bgWorkerTCP_PUP_RunWorkerCompleted;

            bgWorkerTCP_VE1 = new BackgroundWorker();
            bgWorkerTCP_VE1.WorkerReportsProgress = true;
            bgWorkerTCP_VE1.DoWork += bgWorkerTCP_VE1_Process;
            bgWorkerTCP_VE1.ProgressChanged += bgWorkerTCP_VE1_ProgressChanged;
            bgWorkerTCP_VE1.RunWorkerCompleted += bgWorkerTCP_VE1_RunWorkerCompleted;
            
            bgWorkerTCP_VIU = new BackgroundWorker();
            bgWorkerTCP_VIU.WorkerReportsProgress = true;
            bgWorkerTCP_VIU.DoWork += bgWorkerTCP_VIU_Process;
            bgWorkerTCP_VIU.ProgressChanged += bgWorkerTCP_VIU_ProgressChanged;
            bgWorkerTCP_VIU.RunWorkerCompleted += bgWorkerTCP_VIU_RunWorkerCompleted;
            
            bgWorkerTCP_VC1 = new BackgroundWorker();
            bgWorkerTCP_VC1.WorkerReportsProgress = true;
            bgWorkerTCP_VC1.DoWork += bgWorkerTCP_VC1_Process;
            bgWorkerTCP_VC1.ProgressChanged += bgWorkerTCP_VC1_ProgressChanged;
            bgWorkerTCP_VC1.RunWorkerCompleted += bgWorkerTCP_VC1_RunWorkerCompleted;
            
            bgWorkerTCP_VC2 = new BackgroundWorker();
            bgWorkerTCP_VC2.WorkerReportsProgress = true;
            bgWorkerTCP_VC2.DoWork += bgWorkerTCP_VC2_Process;
            bgWorkerTCP_VC2.ProgressChanged += bgWorkerTCP_VC2_ProgressChanged;
            bgWorkerTCP_VC2.RunWorkerCompleted += bgWorkerTCP_VC2_RunWorkerCompleted;
            
            bgWorkerTCP_VI2 = new BackgroundWorker();
            bgWorkerTCP_VI2.WorkerReportsProgress = true;
            bgWorkerTCP_VI2.DoWork += bgWorkerTCP_VI2_Process;
            bgWorkerTCP_VI2.ProgressChanged += bgWorkerTCP_VI2_ProgressChanged;
            bgWorkerTCP_VI2.RunWorkerCompleted += bgWorkerTCP_VI2_RunWorkerCompleted;

            bgWorkerTCP_VE2 = new BackgroundWorker();
            bgWorkerTCP_VE2.WorkerReportsProgress = true;
            bgWorkerTCP_VE2.DoWork += bgWorkerTCP_VE2_Process;
            bgWorkerTCP_VE2.ProgressChanged += bgWorkerTCP_VE2_ProgressChanged;
            bgWorkerTCP_VE2.RunWorkerCompleted += bgWorkerTCP_VE2_RunWorkerCompleted;

        }

        private void btnStartSup_Click(object sender, EventArgs e)
        {
            btnStartSup.Enabled = false;
            tabControl1.SelectedTab = tabSupTB;
            
            bgWorkerCB.RunWorkerAsync();

        }

        private void bgWorkerCB_Process(object sender, DoWorkEventArgs e)
        {
            BackgroundWorker bgWorker = (BackgroundWorker)sender;
            for (var i = 0; i < 100; i++)
            {
                bgWorker.ReportProgress(i);
                Thread.Sleep(100);
            }
        }

        private void bgWorkerCB_ProgressChanged(object sender, ProgressChangedEventArgs e)
        {
            if (e.ProgressPercentage >= 20) labelSUPCB1.ForeColor = System.Drawing.Color.Green;
            if (e.ProgressPercentage >= 40) labelSUPCB2.ForeColor = System.Drawing.Color.Green;
            if (e.ProgressPercentage >= 60) labelSUPCB3.ForeColor = System.Drawing.Color.Green;
            if (e.ProgressPercentage >= 80) labelSUPCB4.ForeColor = System.Drawing.Color.Green;
        }

        void bgWorkerCB_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)
        {
            btnStartSup.Enabled = true;
        }

        private void bgWorkerTCP_PUP_Process(object sender, DoWorkEventArgs e)
        {
            BackgroundWorker bgWorker = (BackgroundWorker)sender;
            for (var i = 0; i < 100; i++)
            {
                bgWorker.ReportProgress(i);
                Thread.Sleep(100);
            }
        }

    }
}
